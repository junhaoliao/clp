name: "clp-image-build"
description: "Builds a CLP container image."

inputs:
  image_type:
    description: "Type of image to build"
    required: true
    type: "choice"
    options:
      - "execution"
      - "package"
  image_registry:
    default: "ghcr.io"
    description: "Container image registry"
    required: false
  image_registry_username:
    default: "${{github.actor}}"
    description: "Container image registry username"
    required: false
  image_registry_password:
    default: ""
    description: "Container image registry password"
    required: false
  platform_id:
    description: "Platform ID of the container (e.g. ubuntu)"
    required: true
  platform_version_id:
    description: "Platform VERSION_ID / VERSION_CODENAME of the container
      (e.g. jammy, focal, etc.)"
    required: true

runs:
  using: "composite"
  steps:
    - name: "Set up Docker Buildx"
      uses: "docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2"

    - name: "Login to Image Registry"
      uses: "docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772"
      with:
        registry: "${{inputs.image_registry}}"
        username: "${{inputs.image_registry_username}}"
        password: "${{inputs.image_registry_password}}"

    - name: "Sanitize Repository Name"
      id: "sanitization"
      shell: "bash"
      run: |
        # Docker doesn't support repository names with uppercase characters, so we convert the
        # name to lowercase here.
        echo "REPOSITORY=$(echo '${{github.repository}}' | tr '[:upper:]' '[:lower:]')" \
          >> "$GITHUB_OUTPUT"

    - name: "Update Metadata"
      id: "meta"
      uses: "docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804"
      with:
        images: "${{inputs.image_registry}}/${{steps.sanitization.outputs.REPOSITORY}}\
          /clp-${{inputs.image_type}}-x86-${{inputs.platform_id}}-${{inputs.platform_version_id}}"

    - name: "Determine Dockerfile Path"
      id: "dockerfile"
      shell: "bash"
      run: |
        base_path="./tools/docker-images"
        platform="${{inputs.platform_id}}-${{inputs.platform_version_id}}"

        if [[ "${{inputs.image_type}}" == "execution" ]]; then
          path="$base_path/clp-execution-base-$platform/Dockerfile"
        else
          path="$base_path/clp-package-$platform/Dockerfile"
        fi

        echo "DOCKERFILE=$path" >> "$GITHUB_OUTPUT"

    - name: "Build and Push"
      if: "github.event_name != 'pull_request' && github.ref == 'refs/heads/main'"
      uses: "docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4"
      with:
        context: "./"
        file: "${{steps.dockerfile.outputs.DOCKERFILE}}"
        push: true
        tags: "${{steps.meta.outputs.tags}}"
        labels: "${{steps.meta.outputs.labels}}"
